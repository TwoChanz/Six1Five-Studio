You are working on a full-stack TypeScript + Tailwind + Vite + Express project called `RealityCapturePortfolio`. This is a portfolio site showcasing 3D scans, drone footage, and preservation work. The current file structure includes public GLB models, a `resume.html`, and server-side logic with `drizzle-orm`.

üìÅ Project structure: 
- `/public/assets/models/*.glb`
- `/src/` (client UI)
- `/server/` (API + routes)
- `/shared/schema.ts` (shared data types)

üéØ GOAL: Refactor this portfolio to support dynamic project pages using route params and a `projects.ts` config. Each project should include a title, slug, viewer type (`glb` or `iframe`), description, tags, tools used, and thumbnail.

---

üõ†Ô∏è STEP 1: Create `/shared/projects.ts` and populate it with mock project entries:
```ts
// Example project
{
  id: "murphy-center",
  title: "Murphy Center Arena ‚Äì MTSU",
  slug: "murphy-center",
  description: "3D reconstruction and documentation for the Murphy Center Arena using aerial photogrammetry and RTX-powered mesh generation.",
  tags: ["RealityCapture", "Photogrammetry", "GLB"],
  viewerType: "iframe",
  viewerUrl: "https://poly.cam/capture/f74d19f9-a7f2-4efa-aa04-129282900374/embed",
  thumbnail: "/assets/models/murphy-center-thumb.png",
  tools: ["DJI Mini 4 Pro", "RealityCapture", "Blender"]
}
üõ†Ô∏è STEP 2: Create route /src/routes/project/[slug].tsx to display a single project page:

Match slug from URL

Find project in projects.ts

Render ProjectViewer.tsx component based on viewer type (glb = Three.js, iframe = embed)

Add tags, tools, and description

üõ†Ô∏è STEP 3: Create reusable components:

ProjectCard.tsx: Thumbnail, short desc, onClick ‚Üí navigate to project

ProjectViewer.tsx: If type is glb, load using <Canvas> + useGLTF. If type is iframe, use <iframe> with styling.

TagBadge.tsx: Render tags (e.g. "Photogrammetry", "Drone", etc.)

üß† Bonus if time:

Add Contact button with mailto: or prefilled Typeform

Add logEvent() to track project views

Use lazy loading for models or iframes

Add filtering by tag later

DO NOT touch resume.html or drizzle.config.ts.

